C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2024 14:03:28 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Obj\main.obj
COMPILER INVOKED BY: A:\Keil_v5_51\C51\BIN\C51.EXE User\main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App\iic;.\A
                    -pp\key;.\App\smg;.\Public;.\App\ds18b20;.\App\ds1302;.\App\ired;.\App\time;.\App\xpt2046;.\App\pwm;.\App\lcd1602) DEBUG 
                    -OBJECTEXTEND PRINT(.\Obj\main.lst) TABS(2) OBJECT(.\Obj\main.obj)

line level    source

   1          #include "stc89.h"
   2          
   3          #define BUFFER_SIZE 20
   4          
   5          // 17361@40MHz 6个12T触发一次
   6          void Serial_Init() {
   7   1          SCON = 0x50;  // 设置为模式1，8位数据，可变波特率
   8   1          TMOD |= 0x20; // 使用定时器1作为波特率发生器
   9   1          TH1 = 0xFA;   // 设置波特率为9600
  10   1          TL1 = 0xFA;   // 设置波特率为9600
  11   1          TR1 = 1;      // 启动定时器1
  12   1          TI = 1;       // 设置TI，使能串口发送
  13   1          REN = 1;      // 允许串口接收
  14   1      }
  15          
  16          
  17          void Uartsend(unsigned char byte)//发送
  18          {
  19   1        SBUF=byte;//把数据写入发送缓冲区SBUF
  20   1        //数据发送完成的标志是TI=1；所以等待数据传送完
  21   1        while(TI==0);
  22   1        TI=0;//软件清零
  23   1      }
  24          
  25          // void Uartsendstring(char *str) {
  26          //     while (*str) {
  27          //         Uartsend(*str++);
  28          //     }
  29          // }
  30          
  31          // void Delay1s(void) //@40MHz
  32          // {
  33          //  unsigned char data i, j, k;
  34          
  35          //  i = 26;
  36          //  j = 85;
  37          //  k = 248;
  38          //  do
  39          //  {
  40          //    do
  41          //    {
  42          //      while (--k);
  43          //    } while (--j);
  44          //  } while (--i);
  45          // }
  46          
  47           
  48          int main()
  49          {
  50   1          unsigned char receivedByte;
  51   1          unsigned char ioStatus;
  52   1          // sfr tmp;
  53   1          // unsigned char i;
C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2024 14:03:28 PAGE 2   

  54   1      
  55   1          //初始化默认所有IO口为0
  56   1          P0 = 0x00;
  57   1          P1 = 0x00;
  58   1          P2 = 0x00;
  59   1          // P3 = 0x00;
  60   1          
  61   1      
  62   1        Serial_Init();
  63   1          Uartsend('a');
  64   1          while (1) {
  65   2              if (RI) { // 如果接收到数据
  66   3                  RI = 0; // 清除接收中断标志
  67   3                  receivedByte = SBUF; // 读取接收到的数据
  68   3      
  69   3                  //将输入的数据二进制转换为字符串
  70   3                  // Uartsendstring("receivedByte: ");
  71   3                  // for (i = 0; i < 8; i++) {
  72   3                  //     if (receivedByte & (0x80 >> i)) {
  73   3                  //         Uartsend('1');
  74   3                  //     } else {
  75   3                  //         Uartsend('0');
  76   3                  //     }
  77   3                  // }
  78   3                  // Uartsend('\n');
  79   3                  
  80   3      
  81   3                  // 解析命令
  82   3                  if ((receivedByte & 0x80) == 0x80) { // 检查是否为IO命令
  83   4                      unsigned char group = (receivedByte & 0x60) >> 5;
  84   4                      unsigned char ioNumber = (receivedByte & 0x1C) >> 2;
  85   4                      // unsigned char command = receivedByte & 0x03;
  86   4      
  87   4                      if (!(receivedByte & 0x02)) { // 输出命令
  88   5                          ioStatus = receivedByte & 0x01;
  89   5                          // 根据group和ioNumber设置IO状态
  90   5      
  91   5                          //设置值
  92   5                          switch (group)
  93   5                          {
  94   6                          case 0:
  95   6                              if (ioStatus) {
  96   7                                  P0 |= (1 << ioNumber);
  97   7                              } else {
  98   7                                  P0 &= ~(1 << ioNumber);
  99   7                              }
 100   6                              // Uartsendstring("set P0");
 101   6                              break;
 102   6                          case 1:
 103   6                              if (ioStatus) {
 104   7                                  P1 |= (1 << ioNumber);
 105   7                              } else {
 106   7                                  P1 &= ~(1 << ioNumber);
 107   7                              }
 108   6                              // Uartsendstring("set P1");
 109   6                              break;
 110   6                          case 2:
 111   6                              if (ioStatus) {
 112   7                                  P2 |= (1 << ioNumber);
 113   7                              } else {
 114   7                                  P2 &= ~(1 << ioNumber);
 115   7                              }
C51 COMPILER V9.60.7.0   MAIN                                                              08/13/2024 14:03:28 PAGE 3   

 116   6                              // Uartsendstring("set P2");
 117   6                              break;
 118   6                          case 3:
 119   6                              if (ioStatus) {
 120   7                                  P3 |= (1 << ioNumber);
 121   7                              } else {
 122   7                                  P3 &= ~(1 << ioNumber);
 123   7                              }
 124   6                              // Uartsendstring("set P3");
 125   6                              break;
 126   6                          default:
 127   6                              break;
 128   6                          }
 129   5                          Uartsend('s');
 130   5      
 131   5                      } else if (!(receivedByte & 0x01)) { // 读取命令
 132   5                          // 读取IO状态
 133   5                          //设置值
 134   5                          switch (group)
 135   5                          {
 136   6                          case 0:
 137   6                              ioStatus = P0 & (1 << ioNumber);
 138   6                              break;
 139   6                          case 1:
 140   6                              ioStatus = P1 & (1 << ioNumber);
 141   6                              break;
 142   6                          case 2:
 143   6                              ioStatus = P2 & (1 << ioNumber);
 144   6                              break;
 145   6                          case 3:
 146   6                              ioStatus = P3 & (1 << ioNumber);
 147   6                              break;
 148   6                          default:
 149   6                              break;
 150   6                          }
 151   5      
 152   5                          if (ioStatus) {
 153   6                              ioStatus = 0xFF;
 154   6                          } else {
 155   6                              ioStatus = 0x00;
 156   6                          }
 157   5      
 158   5                          // 发送读取到的IO状态回主机（此处假设接收命令后立即发送状态）
 159   5                          Uartsend(ioStatus);
 160   5                      }
 161   4                  }
 162   3              }
 163   2          }
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    366    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
